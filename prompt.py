QUESTION_CLASS = """
问题：
"{question}"
判断问题的类型。
问题类型：
类型 1: {{
    名称: direct_answer,
    描述: 直接用大模型回答，不需要查询数据表
    例子: 我国法律监督体系的构成、上市公司因违反信息披露规定与因市场操纵受到的处罚有何区别？、上市公司因涉嫌金融诈骗面临的法律风险有哪些？
}}

类型 2: {{
    名称: need_retrieval,
    描述: 需要查询数据表进行回答
    例子: 找下注册号为320512400000458是哪个公司？、劲拓股份拥有哪些子公司？、我想要查询浙江时立态合科技有限公司的组织机构代码是多少？
}}

--------
请按照以下json格式进行输出，可以被Python json.loads函数解析。只给出问题类型，不作解释，不作答：
```json
{{
    "category_name": ""
}}
```
"""
TABLE_PROMPT = """
根据数据表的属性，判断回答问题所需要的数据表。
问题：{question}
----
table 1: {{
    名称: company_info
    属性值: 公司名称, 公司简称, 英文名称, 关联证券, 公司代码, 曾用简称, 所属市场, 所属行业, 上市日期, 法人代表, 总经理 ,董秘, 邮政编码, 注册地址, 办公地址, 联系电话, 传真, 官方网址, 电子邮箱, 入选指数, 主营业务, 经营范围, 机构简介, 每股面值, 首发价, 首发募资净额, 首发主承销商
    }}

table 2: {{
    名称: company_register
    属性值: 公司名称, 登记状态, 统一社会信用代码, 注册资本, 成立日期, 省份, 城市, 区县, 注册号, 组织机构代码, 参保人数, 企业类型, 曾用名
    }}

table 3: {{
    名称: sub_company_info
    属性值: 关联上市公司股票代码, 关联上市公司股票简称, 关联上市公司全称, 上市公司关系, 上市公司参股比例, 上市公司投资金额, 公司名称
    }}

table 4: {{
    名称: legal_document
    属性值: 标题, 案号, 文书类型, 原告, 被告, 原告律师, 被告律师, 案由, 审理法条依据, 涉案金额, 判决结果, 胜诉方, 文件名
}}
----
请按照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
注意只需要回答一个数据表。
```json
{{
    "名称": ""
}}
``` 
"""
WRITER_PROMPT_1 = """
# 任务 #
1.  如果问题可以被下方函数解决，请你先从functions模块中导入函数再解决任务，最后结果要使用print函数打印出来。
2.  请你把代码放在```python```代码框中，方便我执行你的代码，请把结果用print打印出来。
4.  如果我执行的结果是正确的，请结合结果与问题返回相应的答案。
5.  公司简称都是四个字的，如果比四个字多就是公司名称。
6.  如果公司名为英文，你可以通过key为英文名称使用search_company_name_by_info函数获得该公司名称。

# 你可以使用的函数： #
get_company_info(company_name: list[str]) -> list[dict]
根据公司名称获得该公司所有基本信息
例如：
    输入：
    company_name = ["广州发展集团股份有限公司"] #公司名称
    输出：
    [{'上市日期': '1997-07-18',
        '主营业务': '从事电力产业项目的设计、投资、工程总承包建设、生产、管理、销售。',
        '传真': '020-37850938',
        '入选指数': '国证Ａ指,巨潮小盘',
        '公司代码': '600098',
        '公司名称': '广州发展集团股份有限公司',
        '公司简称': '广州发展',
        '关联证券': None,
        '办公地址': '广东省广州市天河区临江大道3号31-32楼',
        '官方网址': 'www.gdg.com.cn',
        '总经理': None,
        '所属市场': '上交所',
        '所属行业': '电力、热力生产和供应业',
        '曾用简称': '广州控股',
        '机构简介': '公司前身系广州珠江电力工程公司，于1997年始进行股份制改组，以发起人净资产折为国家股56600万股，经1997年6月27日发行后，上市时总股本达66600万股，其内部职工股1000万股将于公众股9000万股1997年7月18日在上交所上市交易期满半后上市。',
        '每股面值': '1.0',
        '法人代表': '蔡瑞雄',
        '注册地址': '广东省广州市天河区临江大道3号发展中心30-32楼',
        '电子邮箱': '600098@gdg.com.cn',
        '经营范围': '从事能源（电力、煤炭、油品、天然气、新能源及可再生能源等综合能源业务）、节能、环保等业务的投资、管理，与上述业务有关的物资、设备、产品的销售（国家有专项专营规定的除外）。',
        '联系电话': '020-37850968',
        '英文名称': 'Guangzhou Development Group Incorporated',
        '董秘': '吴宏',
        '邮政编码': '510623',
        '首发主承销商': '广州证券有限责任公司',
        '首发价格': '7.87',
        '首发募资净额': '77250.0'}]

search_company_name_by_info(key: str,value: str) -> list[str]:
根据公司基本信息某个字段是某个值来查询具体的公司名称
可以输入的字段有['上市日期','主营业务','传真','入选指数',
'公司代码','公司简称','关联证券','办公地址','官方网址',
'总经理','所属市场','所属行业','曾用简称','机构简介',
'每股面值','法人代表','注册地址','电子邮箱','经营范围',
'联系电话','英文名称','董秘','邮政编码','首发主承销商',
'首发价格','首发募资净额',]
例如：
    输入：
    key = "所属行业",
    value = "批发业"
    输出：
    ['国药集团药业股份有限公司','苏美达股份有限公司','深圳市英唐智能控制股份有限公司']

get_company_register(company_name: list[str]) -> list[dict]
根据公司名称获得该公司所有注册信息
例如：
    输入：
    company_name = ["广州发展集团股份有限公司"]
    输出：
    [{'企业类型': '股份有限公司（上市、国有控股）',
        '公司名称': '广州发展集团股份有限公司',
        '区县': '天河区',
        '参保人数': '207.0',
        '城市': '广州市',
        '成立日期': '1992-11-13',
        '曾用名': '广州发展实业控股集团股份有限公司、广州电力企业集团股份有限公司、广州珠江电力工程公司、广州电力企业集团有限公司',
        '注册号': '440101000196724',
        '注册资本': '354405.5525',
        '登记状态': '在业',
        '省份': '广东省',
        '组织机构代码': '23124317-3',
        '统一社会信用代码': '91440101231243173M'}]

search_company_name_by_register(key: str,value: str) -> dict:
根据公司注册信息某个字段是某个值来查询具体的公司名称。
可以输入的字段有['企业类型','区县','参保人数','城市',
'成立日期','曾用名','注册号','注册资本','登记状态',
'省份','组织机构代码','统一社会信用代码']
例如：
    输入：
    key =  "注册号",
    value =  "440101000196724"}
    输出：
    {"公司名称": "广州发展集团股份有限公司"}

# 使用函数示例 #
例一，如果问题是"请问批发业注册资本最高的前3家公司的名称以及他们的注册资本（单位为万元）？"
你可以返回如下代码块

```python
from functions import search_company_name_by_info, get_company_register
# 根据key为所属行业，values为批发业，使用search_company_name_by_info函数获取批发业所有公司,并将公司名称单独存入列表
company_names_list = search_company_name_by_info(key="所属行业", value="批发业")
company_names = [company_name for company_name in company_names_list]
# 使用company_names查询企业注册资本
company_register = get_company_register(company_name=company_names)
# 按照注册资本大小排序
sorted_company_register = sorted(company_register, key=lambda x: x['注册资本'], reverse=True)
# 打印排序后的前三个公司名称与注册资本
for i in range(3):
    print(sorted_company_register[i]['公司名称'])
    print(sorted_company_register[i]['注册资本'])
```
例二，如果问题是"瑞丰光电的法定代表人、注册地址和电子邮箱分别是？"
你可以返回如下代码块
```python
from functions import get_company_info, search_company_name_by_info

# 根据公司简称使用search_company_name_by_info获取公司全称,其中key="公司简称", value="瑞丰光电"
company_name = search_company_name_by_info(key="公司简称", value="瑞丰光电")
# 根据公司全称使用get_company_info获取公司基本信息
company_info = get_company_info(company_name=company_name)
print("法人代表" + company_info[0]['法人代表'])
print("注册地址" + company_info[0]['注册地址'])
print("电子邮箱" + company_info[0]['电子邮箱'])
```
例三：如果问题是"请核查注册编号为370503228012016的公司的具体名字。"
你可以返回如下代码块
```python
from functions import search_company_name_by_register
# 通过使用search_company_name_by_register函数获得公司名称，其中key为注册号，value为370503228012016
print(search_company_name_by_register(key='注册号', value='370503228012016'))
```
"""
WRITER_PROMPT_2 = """
# 任务 #
1.  如果问题可以被下方函数解决，请你先从functions模块中导入函数再解决任务，最后结果要使用print函数打印出来。
2.  请你把代码放在```python```代码框中，方便我执行你的代码，请把结果用print打印出来。
3.  关联上市公司股票简称都是四个字的，如果比四个字多就是关联上市公司全称。
4.  如果公司名为英文，你可以通过key为英文名称使用search_company_name_by_info函数获得该公司名称。
5.  如果我执行的结果是正确的，请结合结果与问题返回相应的答案。
# 你可以使用的函数： #
get_sub_company_info_by_company_info(key: str,value: str) -> list[dict]
根据母公司信息某个字段是某个值获得所有子公司。
可以使用的参数有[关联上市公司股票代码,关联上市公司股票简称,关联上市公司全称]
例如：
    输入：
    key="关联上市公司全称"
    value="北京同仁堂股份有限公司"
    输出：
    [{'关联上市公司股票代码': '600085',
    '关联上市公司股票简称': '同仁堂',
    '关联上市公司全称': '北京同仁堂股份有限公司',
    '上市公司关系': '子公司',
    '上市公司参股比例': '51.0',
    '上市公司投资金额': '4080000',# 返回的上市公司投资金额以元为单位
    '公司名称': '北京同仁堂内蒙古中药材发展有限公司'},...]


get_sub_company_info(company_name: list[str]) -> list[dict]
根据子公司名称获得母公司信息。
例如：
    输入：
    company_name = ["广东天昊药业有限公司"]
    输出：
    [{'上市公司关系': '子公司',
        '上市公司参股比例': '100.0',
        '上市公司投资金额': '7000000',# 返回的上市公司投资金额以元为单位
        '公司名称': '广东天昊药业有限公司',
        '关联上市公司全称': '冠昊生物科技股份有限公司',
        '关联上市公司股票代码': '300238',
        '关联上市公司股票简称': '冠昊生物'}]

search_company_name_by_info(key: str,value: str) -> list[str]:
根据公司基本信息某个字段是某个值来查询具体的公司名称
可以输入的字段有['上市日期','主营业务','传真','入选指数',
'公司代码','公司简称','关联证券','办公地址','官方网址',
'总经理','所属市场','所属行业','曾用简称','机构简介',
'每股面值','法人代表','注册地址','电子邮箱','经营范围',
'联系电话','英文名称','董秘','邮政编码','首发主承销商',
'首发价格','首发募资净额',]
例如：
    输入：
    key = "所属行业",
    value = "批发业"
    输出：
    ['国药集团药业股份有限公司','苏美达股份有限公司','深圳市英唐智能控制股份有限公司']

# 使用函数示例 #
例一，如果问题是"我想知道北京华清瑞达科技有限公司、博晖生物制药（内蒙古）有限公司、浙江迪安健检医疗管理有限公司分别属于哪几家公司的子公司。"
你可以返回如下代码块
```python
from functions import get_sub_company_info
result = get_sub_company_info(company_name=['北京华清瑞达科技有限公司', '博晖生物制药（内蒙古）有限公司', '浙江迪安健检医疗管理有限公司'])
for company_info in result:
    print(f"公司名称: {company_info['公司名称']}")
    print(f"关联上市公司股票代码: {company_info['关联上市公司股票代码']}")
    print(f"关联上市公司股票简称: {company_info['关联上市公司股票简称']}")
    print(f"关联上市公司全称: {company_info['关联上市公司全称']}")
    print(f"上市公司关系: {company_info['上市公司关系']}")
    print(f"上市公司参股比例: {company_info['上市公司参股比例']}")
    print(f"上市公司投资金额: {company_info['上市公司投资金额']}")
    print("----------")
```

例二，如果问题是"大众交通（集团）股份有限公司中，投资超5000万并控股超50%的子公司有多少家？"
你可以返回如下代码块
```python
from functions import get_sub_company_info_by_company_info
sub_company_info = get_sub_company_info_by_company_info(key="关联上市公司全称", value="大众交通（集团）股份有限公司")
# 获取符合条件的公司
qualifying_subcompanies = [
    sub for sub in sub_company_info
    if float(sub['上市公司参股比例']) > 50 and float(sub['上市公司投资金额']) > 50000000
]
# 打印结果
print(f"大众交通（集团）股份有限公司中，投资超5000万并控股超50%的子公司有 {len(qualifying_subcompanies)} 家。")
for sub in qualifying_subcompanies:
    print(f"子公司名称: {sub['公司名称']}")
    print(f"投资金额: {sub['上市公司投资金额']}")
    print(f"控股比例: {sub['上市公司参股比例']}")
    print("----------")
```
"""
WRITER_PROMPT_3 = """
# 任务 #
1.  问题可以被下方函数解决，请你先从functions模块中导入函数再解决任务，最后结果要使用print函数打印出来。
2.  请你把代码放在```python```代码框中，方便我执行你的代码，请把结果用print打印出来。
3.  如果我执行的结果是正确的，请结合结果与问题返回相应的答案。
# 你可以使用的函数： #
get_legal_document( case_num: list[str]) -> list[dict]
根据案号获得该案所有基本信息。

例如：
    输入：
    case_num = ["(2020)赣0191民初1045号"] # 如果案号中有括号则只识别英文括号
    输出：
    [{'判决结果': '一、南昌绿地申新置业有限公司于本判决生效之日起十五日内向上海澳辉照明电器有限公司支付本金1179104元。\n'
            '二、南昌绿地申新置业有限公司于本判决生效之日起十五日内向上海澳辉电器有限公司支付利息(以质保金1179104元为基数,按年利率6%,从2019年6月7日起计算至1179104元实际付清之日止)。\n'
            '三、驳回上海澳辉电器有限公司的其他诉讼请求。',
        '原告': '上海澳辉照明电器有限公司',
        '原告律师': '刘某某,北京大成(南昌)律师事务所律师\n罗某某,北京大成(南昌)律师事务所律师',
        '审理法条依据': '无',
        '文书类型': '民事判决书',
        '文件名': '（2020）赣0191民初1045号.txt',
        '标题': '上海澳辉照明电器有限公司与上海建工集团股份有限公司、南昌绿地申新置业有限公司合同纠纷一审民事判决书',
        '案号': '(2020)赣0191民初1045号',
        '案由': '合同纠纷',
        '涉案金额': '1179104',
        '胜诉方': '原告',
        '被告': '上海建工集团股份有限公司\n南昌绿地申新置业有限公司',
        '被告律师': '罗丽萍,公司员工\n李某某,江西豫章律师事务所律师\n蔡某某,江西豫章律师事务所实习律师'}]

search_case_num_by_legal_document(key: str,value: str) -> dict
根据法律文书某个字段是某个值来查询具体的案号
根据法律文书某个字段是某个值来查询具体的案号。
可以输入的字段有['判决结果','原告','原告律师','审理法条依据',
'文书类型','文件名','标题','案由','涉案金额',
'胜诉方','被告','被告律师',]

例如：
    输入：
    key = "原告",
    value = "光明乳业股份有限公司"
    输出：
    [{'案号': '(2020)苏06民初861号'},
        {'案号': '(2021)沪0104民初6181号'},
        {'案号': '(2021)沪0104民初17782号'},
        {'案号': '(2019)湘0111民初3091号'}]

# 使用函数示例 #
例一，如果问题是"(2020)赣0191民初1045号和(2019)晋0402民初918号，能否请你帮我比较一下这两个合同纠纷案件中的涉案金额，看看哪个案号的涉案金额更大？"
你可以返回如下代码块
```python
from functions import get_legal_document
# 使用get_legal_document函数查找相关案件
case_num_1 = "(2020)赣0191民初1045号"
case_num_2 = "(2019)晋0402民初918号"
# 比较并打印结果
legal_document = get_legal_document(case_num=[case_num_1, case_num_2])
if float(legal_document[0]['涉案金额']) > float(legal_document[1]['涉案金额']):
    print(case_num_1 + "的涉案金额最大，为" + legal_document[0]['涉案金额'] + "元")
elif float(legal_document[1]['涉案金额']) > float(legal_document[0]['涉案金额']):
    print(case_num_2 + "的涉案金额最大，为" + legal_document[0]['涉案金额'] + "元")
else:
    print("两起案件涉案金额一样大，为" + legal_document[0]['涉案金额'] + "元")
```
例二，如果问题是"请问，历史上关于不正当竞争纠纷案由的案件数量是多少？"
你可以返回如下代码块
```python
from functions import search_case_num_by_legal_document
# 使用search_case_num_by_legal_document函数查找相关案件，key为案由，value为不正当竞争纠纷
legal_document = search_case_num_by_legal_document(key='案由', value='不正当竞争纠纷')
# 打印结果
print("历史上关于不正当竞争纠纷案由的案件有" + len(legal_document) + "件")
```
"""

WRITER_PROMPT="""
# 任务 #
1.  如果问题可以被下方函数解决，请你先从functions模块中导入函数再解决任务，最后结果要使用print函数打印出来。
2.  请你把代码放在```python```代码框中，方便我执行你的代码，请把结果用print打印出来。
3.  如果是涉及公司方面的问题，你应该正确判断你使用的参数属于公司名称还是公司简称，抑或是关联上市公司全称还是关联上市公司股票简称。
4.  如果公司名为英文，你可以通过key为英文名称使用search_company_name_by_info函数获得该公司名称。
5.  当问题为法律方向，且问题无法通过get_legal_document、search_case_num_by_legal_document两个函数解决时，不用调用函数，仅根据自己的知识返回答案。

# 你可以使用的函数： #
get_company_info(company_name: list[str]) -> list[dict]
根据公司名称获得该公司所有基本信息
例如：
    输入：
    company_name = ["广州发展集团股份有限公司"] #公司名称
    输出：
    [{'上市日期': '1997-07-18',
        '主营业务': '从事电力产业项目的设计、投资、工程总承包建设、生产、管理、销售。',
        '传真': '020-37850938',
        '入选指数': '国证Ａ指,巨潮小盘',
        '公司代码': '600098',
        '公司名称': '广州发展集团股份有限公司',
        '公司简称': '广州发展',
        '关联证券': None,
        '办公地址': '广东省广州市天河区临江大道3号31-32楼',
        '官方网址': 'www.gdg.com.cn',
        '总经理': None,
        '所属市场': '上交所',
        '所属行业': '电力、热力生产和供应业',
        '曾用简称': '广州控股',
        '机构简介': '公司前身系广州珠江电力工程公司，于1997年始进行股份制改组，以发起人净资产折为国家股56600万股，经1997年6月27日发行后，上市时总股本达66600万股，其内部职工股1000万股将于公众股9000万股1997年7月18日在上交所上市交易期满半后上市。',
        '每股面值': '1.0',
        '法人代表': '蔡瑞雄',
        '注册地址': '广东省广州市天河区临江大道3号发展中心30-32楼',
        '电子邮箱': '600098@gdg.com.cn',
        '经营范围': '从事能源（电力、煤炭、油品、天然气、新能源及可再生能源等综合能源业务）、节能、环保等业务的投资、管理，与上述业务有关的物资、设备、产品的销售（国家有专项专营规定的除外）。',
        '联系电话': '020-37850968',
        '英文名称': 'Guangzhou Development Group Incorporated',
        '董秘': '吴宏',
        '邮政编码': '510623',
        '首发主承销商': '广州证券有限责任公司',
        '首发价格': '7.87',
        '首发募资净额': '77250.0'}]

search_company_name_by_info(key: str,value: str) -> list[str]:
根据公司基本信息某个字段是某个值来查询具体的公司名称
可以输入的字段有['上市日期','主营业务','传真','入选指数',
'公司代码','公司简称','关联证券','办公地址','官方网址',
'总经理','所属市场','所属行业','曾用简称','机构简介',
'每股面值','法人代表','注册地址','电子邮箱','经营范围',
'联系电话','英文名称','董秘','邮政编码','首发主承销商',
'首发价格','首发募资净额',]
例如：
    输入：
    key = "所属行业",
    value = "批发业"
    输出：
    ['国药集团药业股份有限公司','苏美达股份有限公司','深圳市英唐智能控制股份有限公司']

get_company_register(company_name: list[str]) -> list[dict]
根据公司名称获得该公司所有注册信息
例如：
    输入：
    company_name = ["广州发展集团股份有限公司"]
    输出：
    [{'企业类型': '股份有限公司（上市、国有控股）',
        '公司名称': '广州发展集团股份有限公司',
        '区县': '天河区',
        '参保人数': '207.0',
        '城市': '广州市',
        '成立日期': '1992-11-13',
        '曾用名': '广州发展实业控股集团股份有限公司、广州电力企业集团股份有限公司、广州珠江电力工程公司、广州电力企业集团有限公司',
        '注册号': '440101000196724',
        '注册资本': '354405.5525',
        '登记状态': '在业',
        '省份': '广东省',
        '组织机构代码': '23124317-3',
        '统一社会信用代码': '91440101231243173M'}]

search_company_name_by_register(key: str,value: str) -> dict:
根据公司注册信息某个字段是某个值来查询具体的公司名称。
可以输入的字段有['企业类型','区县','参保人数','城市',
'成立日期','曾用名','注册号','注册资本','登记状态',
'省份','组织机构代码','统一社会信用代码']
例如：
    输入：
    key =  "注册号",
    value =  "440101000196724"}
    输出：
    {"公司名称": "广州发展集团股份有限公司"}

get_sub_company_info_by_company_info(key: str,value: str) -> list[dict]
根据母公司信息某个字段是某个值获得所有子公司。
可以使用的参数有[关联上市公司股票代码,关联上市公司股票简称,关联上市公司全称]
例如：
    输入：
    key="关联上市公司全称"
    value="北京同仁堂股份有限公司"
    输出：
    [{'关联上市公司股票代码': '600085',
    '关联上市公司股票简称': '同仁堂',
    '关联上市公司全称': '北京同仁堂股份有限公司',
    '上市公司关系': '子公司',
    '上市公司参股比例': '51.0',
    '上市公司投资金额': '4080000',# 返回的上市公司投资金额以元为单位
    '公司名称': '北京同仁堂内蒙古中药材发展有限公司'},...]


get_sub_company_info(company_name: list[str]) -> list[dict]
根据子公司名称获得母公司信息。
例如：
    输入：
    company_name = ["广东天昊药业有限公司"]
    输出：
    [{'上市公司关系': '子公司',
        '上市公司参股比例': '100.0',
        '上市公司投资金额': '7000000',# 返回的上市公司投资金额以元为单位
        '公司名称': '广东天昊药业有限公司',
        '关联上市公司全称': '冠昊生物科技股份有限公司',
        '关联上市公司股票代码': '300238',
        '关联上市公司股票简称': '冠昊生物'}]

get_legal_document( case_num: list[str]) -> list[dict]
根据案号获得该案所有基本信息。

例如：
    输入：
    case_num = ["(2020)赣0191民初1045号"] # 如果案号中有括号则只识别英文括号
    输出：
    [{'判决结果': '一、南昌绿地申新置业有限公司于本判决生效之日起十五日内向上海澳辉照明电器有限公司支付本金1179104元。\n'
            '二、南昌绿地申新置业有限公司于本判决生效之日起十五日内向上海澳辉电器有限公司支付利息(以质保金1179104元为基数,按年利率6%,从2019年6月7日起计算至1179104元实际付清之日止)。\n'
            '三、驳回上海澳辉电器有限公司的其他诉讼请求。',
        '原告': '上海澳辉照明电器有限公司',
        '原告律师': '刘某某,北京大成(南昌)律师事务所律师\n罗某某,北京大成(南昌)律师事务所律师',
        '审理法条依据': '无',
        '文书类型': '民事判决书',
        '文件名': '（2020）赣0191民初1045号.txt',
        '标题': '上海澳辉照明电器有限公司与上海建工集团股份有限公司、南昌绿地申新置业有限公司合同纠纷一审民事判决书',
        '案号': '(2020)赣0191民初1045号',
        '案由': '合同纠纷',
        '涉案金额': '1179104',
        '胜诉方': '原告',
        '被告': '上海建工集团股份有限公司\n南昌绿地申新置业有限公司',
        '被告律师': '罗丽萍,公司员工\n李某某,江西豫章律师事务所律师\n蔡某某,江西豫章律师事务所实习律师'}]

search_case_num_by_legal_document(key: str,value: str) -> dict
根据法律文书某个字段是某个值来查询具体的案号
根据法律文书某个字段是某个值来查询具体的案号。
可以输入的字段有['判决结果','原告','原告律师','审理法条依据',
'文书类型','文件名','标题','案由','涉案金额',
'胜诉方','被告','被告律师',]

例如：
    输入：
    key = "原告",
    value = "光明乳业股份有限公司"
    输出：
    [{'案号': '(2020)苏06民初861号'},
        {'案号': '(2021)沪0104民初6181号'},
        {'案号': '(2021)沪0104民初17782号'},
        {'案号': '(2019)湘0111民初3091号'}]

# 返回函数示例 #
例一，如果问题是"请问批发业注册资本最高的前3家公司的名称以及他们的注册资本（单位为万元）？"
你可以返回如下代码块

```python
from functions import search_company_name_by_info, get_company_register
# 根据key为所属行业，values为批发业，使用search_company_name_by_info函数获取批发业所有公司,并将公司名称单独存入列表
company_names_list = search_company_name_by_info(key="所属行业", value="批发业")
company_names = [company_name for company_name in company_names_list]
# 使用company_names查询企业注册资本
company_register = get_company_register(company_name=company_names)
# 按照注册资本大小排序
sorted_company_register = sorted(company_register, key=lambda x: x['注册资本'], reverse=True)
# 打印排序后的前三个公司名称与注册资本
for i in range(3):
    print(sorted_company_register[i]['公司名称'])
    print(sorted_company_register[i]['注册资本'])
```
例二，如果问题是"瑞丰光电的法定代表人、注册地址和电子邮箱分别是？"
你可以返回如下代码块
```python
from functions import get_company_info, search_company_name_by_info

# 根据公司简称使用search_company_name_by_info获取公司全称,其中key="公司简称", value="瑞丰光电"
company_name = search_company_name_by_info(key="公司简称", value="瑞丰光电")
# 根据公司全称使用get_company_info获取公司基本信息
company_info = get_company_info(company_name=company_name)
print("法人代表" + company_info[0]['法人代表'])
print("注册地址" + company_info[0]['注册地址'])
print("电子邮箱" + company_info[0]['电子邮箱'])
```
例三，如果问题是"我想知道北京华清瑞达科技有限公司、博晖生物制药（内蒙古）有限公司、浙江迪安健检医疗管理有限公司分别属于哪几家公司的子公司。"
你可以返回如下代码块
```python
from functions import get_sub_company_info
result = get_sub_company_info(company_name=['北京华清瑞达科技有限公司', '博晖生物制药（内蒙古）有限公司', '浙江迪安健检医疗管理有限公司'])
for company_info in result:
    print(f"公司名称: {company_info['公司名称']}")
    print(f"关联上市公司股票代码: {company_info['关联上市公司股票代码']}")
    print(f"关联上市公司股票简称: {company_info['关联上市公司股票简称']}")
    print(f"关联上市公司全称: {company_info['关联上市公司全称']}")
    print(f"上市公司关系: {company_info['上市公司关系']}")
    print(f"上市公司参股比例: {company_info['上市公司参股比例']}")
    print(f"上市公司投资金额: {company_info['上市公司投资金额']}")
    print("----------")
```

例四，如果问题是"大众交通（集团）股份有限公司中，投资超5000万并控股超50%的子公司有多少家？"
你可以返回如下代码块
```python
from functions import get_sub_company_info_by_company_info
sub_company_info = get_sub_company_info_by_company_info(key="关联上市公司全称", value="大众交通（集团）股份有限公司")
# 获取符合条件的公司
qualifying_subcompanies = [
    sub for sub in sub_company_info
    if float(sub['上市公司参股比例']) > 50 and float(sub['上市公司投资金额']) > 50000000
]
# 打印结果
print(f"大众交通（集团）股份有限公司中，投资超5000万并控股超50%的子公司有 {len(qualifying_subcompanies)} 家。")
for sub in qualifying_subcompanies:
    print(f"子公司名称: {sub['公司名称']}")
    print(f"投资金额: {sub['上市公司投资金额']}")
    print(f"控股比例: {sub['上市公司参股比例']}")
    print("----------")
```
例五：如果问题是"请核查注册编号为370503228012016的公司的具体名字。"
你可以返回如下代码块
```python
from functions import search_company_name_by_register
# 通过使用search_company_name_by_register函数获得公司名称，其中key为注册号，value为370503228012016
print(search_company_name_by_register(key='注册号', value='370503228012016'))
```
"""